//NEW CODE (the traditional RC car controls) - Everything under "Drive Train" goes in the loop. The voids go AFTER the loop, but before the end of TeleOp
//Drive Train
        //Right Strafe
        if (leftStickRightX()) {
            motors(-gamepad1.left_stick_x, gamepad1.left_stick_x, gamepad1.left_stick_x, -gamepad1.left_stick_x);
            telemetry.addLine("Strafing Right");
        }
        //Left Strafe
        else if (leftStickLeftX()) {
            motors(-gamepad1.left_stick_x, gamepad1.left_stick_x, gamepad1.left_stick_x, -gamepad1.left_stick_x);
            telemetry.addLine("Strafing Left");
        }
        //Normal Drive
        else
        {
            //Core Script
            drivingPowerLeft = gamepad1.left_stick_y;
            drivingPowerRight = gamepad1.left_stick_y;

            drivingPowerLeftADD = -gamepad1.right_stick_x - gamepad1.right_stick_x * Math.abs(gamepad1.left_stick_y);
            drivingPowerRightADD = gamepad1.right_stick_x + gamepad1.right_stick_x * Math.abs(gamepad1.left_stick_y);

            leftPower = drivingPowerLeft + drivingPowerLeftADD;
            rightPower = drivingPowerRight + drivingPowerRightADD;

            motors(leftPower, rightPower, leftPower, rightPower);

            //Telemetry
            if (drivetrainStopped()) {
                telemetry.addLine("Stopped");
            } else if (drivetrainTurningLeft()) {
                telemetry.addLine("Turning Left");
            } else if (drivetrainTurningRight()) {
                telemetry.addLine("Turning Right");
            } else {
                telemetry.addLine("Driving Normally");
            }
        }
        
//VOIDS FOR NEW CODE: 
    //Easy way to set power of drivetrain
    public void motors(double FL, double FR, double BL, double BR)
    {
        robot.motorFL.setPower(FL * powerModifier);
        robot.motorFR.setPower(FR * powerModifier);
        robot.motorBL.setPower(BL * powerModifier);
        robot.motorBR.setPower(BR * powerModifier);
    }

    public boolean leftStickLeftX ()
    {
        return gamepad1.left_stick_y > gamepad1.left_stick_x && gamepad1.left_stick_y < -gamepad1.left_stick_x;
    }
    public boolean leftStickRightX ()
    {
        return gamepad1.left_stick_y < gamepad1.left_stick_x && gamepad1.left_stick_y > -gamepad1.left_stick_x;
    }
    public boolean drivetrainStopped ()
    {
        return robot.motorFL.getPower() == 0 && robot.motorFR.getPower() == 0 && robot.motorBL.getPower() == 0 && robot.motorBR.getPower() == 0;
    }
    public boolean drivetrainTurningLeft ()
    {
        return robot.motorFL.getPower() > 0 && robot.motorFR.getPower() < 0 && robot.motorBL.getPower() > 0 && robot.motorBR.getPower() < 0;
    }
    public boolean drivetrainTurningRight ()
    {
        return robot.motorFL.getPower() < 0 && robot.motorFR.getPower() > 0 && robot.motorBL.getPower() < 0 && robot.motorBR.getPower() > 0;
    }
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//OLD CODE (tank drive) - Everything under "Drive Train" goes in the loop. The voids go AFTER the loop, but before the end of TeleOp
//Drive Train
        //Right Strafe
        if (gamepad1.left_stick_y < gamepad1.left_stick_x && gamepad1.left_stick_y > -gamepad1.left_stick_x)
        {
            motors(-gamepad1.left_stick_x, gamepad1.left_stick_x, gamepad1.left_stick_x, -gamepad1.left_stick_x);
            telemetry.addLine("Strafing Right");
        }
        //Left Strafe
        else if (gamepad1.left_stick_y > gamepad1.left_stick_x && gamepad1.left_stick_y < -gamepad1.left_stick_x)
        {
            motors(-gamepad1.left_stick_x, gamepad1.left_stick_x, gamepad1.left_stick_x, -gamepad1.left_stick_x);
            telemetry.addLine("Strafing Left");
        }
        //Normal Tank Drive
        else
        {
            double minPower = .1;

            motors(gamepad1.left_stick_y, gamepad1.right_stick_y,gamepad1.left_stick_y,gamepad1.right_stick_y);

            if (robot.motorFL.getPower() == 0 && robot.motorFR.getPower() == 0 && robot.motorBL.getPower() == 0 && robot.motorBR.getPower() == 0)
            {
                telemetry.addLine("Stopped");
            }
            else if (robot.motorFL.getPower() > 0 && robot.motorFR.getPower() < 0 && robot.motorBL.getPower() > 0 && robot.motorBR.getPower() < 0)
            {
                telemetry.addLine("Turning Left");
            }
            else if (Math.abs(robot.motorFL.getPower()) < minPower || Math.abs(robot.motorFR.getPower()) < minPower || Math.abs(robot.motorBL.getPower()) < minPower || Math.abs(robot.motorBR.getPower()) < minPower)
            {
                telemetry.addLine("MOTOR POWER TOO LOW! DANGER!");

                if (Math.abs(robot.motorFL.getPower()) < minPower)
                {
                    telemetry.addLine("FL POWER TOO LOW");
                }
                if (Math.abs(robot.motorFR.getPower()) < minPower)
                {
                    telemetry.addLine("FR POWER TOO LOW");
                }
                if (Math.abs(robot.motorBL.getPower()) < minPower)
                {
                    telemetry.addLine("BL POWER TOO LOW");
                }
                if (Math.abs(robot.motorBR.getPower()) < minPower)
                {
                    telemetry.addLine("BR POWER TOO LOW");
                }
            }
            else if (robot.motorFL.getPower() < 0 && robot.motorFR.getPower() > 0 && robot.motorBL.getPower() < 0 && robot.motorBR.getPower() > 0)
            {
                telemetry.addLine("Turning Right");
            }
            else
            {
                telemetry.addLine("Driving Normally");
            }
        }
//OLD CODE VOIDS:
    //Easy way to set power of drivetrain
    public void motors(double FL, double FR, double BL, double BR)
    {
        robot.motorFL.setPower(FL * powerModifier);
        robot.motorFR.setPower(FR * powerModifier);
        robot.motorBL.setPower(BL * powerModifier);
        robot.motorBR.setPower(BR * powerModifier);
    }
